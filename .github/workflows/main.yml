# This workflow is an automation to build platform specific docker images and publishs them on DockerHub
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  schedule:
    - cron: '0 12 * * *' # everyday at 12am
  push:
    branches:
      - 'master'
    tags:
      - '*'
    paths-ignore:
      - '**.md'
      - '.github/workflows/docs.yml'
      - 'docs/**'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'
      - '.github/workflows/docs.yml'
      - 'docs/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Set environment variables
    env:
      DOCKERHUB_SLUG: seppi91/iris
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        
        # GitHub Action to extract metadata (tags, labels) for Docker.
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
          tag-edge: true
          tag-match: ^v(\d{1,3}.\d{1,3}.\d{1,3})$
          tag-match-group: 1
          
        # GitHub Action to install QEMU static binaries.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
        # GitHub Action to set up Docker Buildx.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
          
        # GitHub Action to login to DockerHub.
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERIO_USERNAME }}
          password: ${{ secrets.DOCKERIO_PASSWORD }}
        
        # GitHub Action to build and push Docker images with Buildx.
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            VERSION=${{ steps.docker_meta.outputs.version }} \
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            VCS_REF=${GITHUB_SHA::8}
          labels: |
            ${{ steps.docker_meta.outputs.labels }}
            org.opencontainers.image.title=seppi91/iris
            org.opencontainers.image.description=Docker image update notifier
            org.opencontainers.image.vendor=seppi91
            
      - name: Check manifest
        if: github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_SLUG }}:${{ steps.docker_meta.outputs.version }}
          
      - name: Inspect image
        if: github.event_name != 'pull_request'
        run: |
          docker pull ${{ env.DOCKERHUB_SLUG }}:${{ steps.docker_meta.outputs.version }}
          docker image inspect ${{ env.DOCKERHUB_SLUG }}:${{ steps.docker_meta.outputs.version }}

      - name: Clear
        if: always() && github.event_name != 'pull_request'
        run: |
            rm -f ${HOME}/.docker/config.json
